services:
  web:
    build:
      context: ../../
      dockerfile: docker/dev/Dockerfile
    command: /entrypoint.sh
    volumes:
      - ../../:/app
      - static_volume:/app/backend/staticfiles
      - media_volume:/app/backend/mediafiles
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  postgres:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=django_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=django_password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  celery_worker:
    build:
      context: ../../
      dockerfile: docker/dev/Dockerfile
    command: celery -A core worker -l info
    volumes:
      - ../../:/app
    environment:
      - DJANGO_ENV=development
      - DJANGO_SETTINGS_MODULE=core.settings.development
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      web:
        condition: service_started

  celery_beat:
    build:
      context: ../../
      dockerfile: docker/dev/Dockerfile
    command: celery -A core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ../../:/app
    environment:
      - DJANGO_ENV=development
      - DJANGO_SETTINGS_MODULE=core.settings.development
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      web:
        condition: service_started
  flower:
    build:
      context: ../../
      dockerfile: docker/dev/Dockerfile
    command: celery -A core flower
    ports:
      - "5555:5555"
    volumes:
      - ../../:/app
    environment:
      - DJANGO_ENV=development
      - DJANGO_SETTINGS_MODULE=core.settings.development
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      web:
        condition: service_started

# At the bottom of the file
volumes:
  postgres_data:
  static_volume:
  media_volume: